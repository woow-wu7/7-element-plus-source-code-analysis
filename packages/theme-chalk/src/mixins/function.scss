@use 'config';

// 注意 @use 和 @import 的区别
// - 链接：https://toutiao.io/posts/3a7enfa/preview
// - config 中包含了一下变量
// $namespace: 'el' !default;
// $common-separator: '-' !default;
// $element-separator: '__' !default;
// $modifier-separator: '--' !default;
// $state-prefix: 'is-' !default;


// BEM support Func
@function selectorToString($selector) {
  $selector: inspect($selector);
  $selector: str-slice($selector, 2, -2);
  @return $selector;
}

@function containsModifier($selector) {
  $selector: selectorToString($selector);

  @if str-index($selector, config.$modifier-separator) {
    @return true;
  } @else {
    @return false;
  }
}

@function containWhenFlag($selector) {
  $selector: selectorToString($selector);

  @if str-index($selector, '.' + config.$state-prefix) {
    @return true;
  } @else {
    @return false;
  }
}

@function containPseudoClass($selector) {
  $selector: selectorToString($selector);

  @if str-index($selector, ':') {
    @return true;
  } @else {
    @return false;
  }
}

@function hitAllSpecialNestRule($selector) {
  @return containsModifier($selector) or containWhenFlag($selector) or
    containPseudoClass($selector);
}

// join var name
// joinVarName(('button', 'text-color')) => '--el-button-text-color'
@function joinVarName($list) {
  $name: '--' + config.$namespace; // 1. 初始化时 $name = --el
  @each $item in $list {
    @if $item != '' {
      $name: $name + '-' + $item;
      // 2
      // 比如  getCssVar('border-color')
      // -  $name: --el-border-color
    }
  }
  @return $name;
}

// getCssVarName('button', 'text-color') => '--el-button-text-color'
@function getCssVarName($args...) {
  @return joinVarName($args);
}



// 1
// 可变参数
// @function 和 @mixin 中的 ( 可变参数 )
// ---
// @mixin animate($name, $time, $mode, $delay) {
//   transition: $name $time $mode $delay;
// }
// 等价于
// @mixin animate($args...) {
//   transition: $args;
// }
// ---
// 使用
// div {
//   @include animate(all, 4s, linear, 0s);
// }



// getCssVar('button', 'text-color') => var(--el-button-text-color)
@function getCssVar($args...) {
  @return var(#{joinVarName($args)}); // 
}

// getCssVarWithDefault(('button', 'text-color'), red) => var(--el-button-text-color, red)
@function getCssVarWithDefault($args, $default) {
  @return var(#{joinVarName($args)}, #{$default});
}

// bem('block', 'element', 'modifier') => 'el-block__element--modifier'
@function bem($block, $element: '', $modifier: '') {
  $name: config.$namespace + config.$common-separator + $block;

  @if $element != '' {
    $name: $name + config.$element-separator + $element;
  }

  @if $modifier != '' {
    $name: $name + config.$modifier-separator + $modifier;
  }

  // @debug $name;
  @return $name;
}
